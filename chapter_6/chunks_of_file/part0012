       os.execvp(prog, args)
#         assert False, 'execvp failed!'
#
#
# if __name__ == '__main__':
#     mypid = os.getpid()
#     spawn('python3', "-u" 'pipes-testchild.py', 'spam')  # fork child program
#     print('Hello 1 from parent', mypid)
#     sys.stdout.flush()
#     reply = input()
#     sys.stderr.write('Parent got: "%s"\n' % reply)  #
#     print('Hello 2 from parent', mypid)
#     sys.stdout.flush()
#     reply = sys.stdin.readline()
#     sys.stderr.write('Parent got: "%s"\n' % reply[:-1])


# import os, time, sys
#
# mypid = os.getpid()
# parentpid = os.getppid()
# sys.stderr.write('Child %d of %d got arg: "%s"\n' % (mypid, parentpid, sys.argv[1]))
# for i in range(2):
#     time.sleep(3)
#     # make parent process wait by sleeping here
#     recv = input()
#     # stdin tied to pipe: comes from parent's stdout
#     time.sleep(3)
#     send = 'Child %d got: [%s]' % (mypid, recv)
#     print(send)
#     # stdout tied to pipe: goes to parent's stdin
#     sys.stdout